version: '2'
services:
  backend:
    hostname: news_backend
    container_name: news_backend
    build:
      context: ./news_backend
      dockerfile: ./Dockerfile
    command: sh -c "yarn start"
    links:
      - mongodb
    env_file: ./news_backend/.env
    environment:
      - MONGO_USERNAME=newsuser
      - MONGO_PASSWORD=12345678
      - MONGO_HOSTNAME=mongodb
      - MONGO_PORT=27017
      - MONGO_DB=news-app
      - PORT=3030
      - NODE_ENV=production
      - COOKIE_SECRET=Y2U1G3CN21UG3HFUY21NHU3IHFI12MHDI3
    networks:
      - frontend
      - backend
    ports:
      - "3030:3030"
    depends_on:
      mongodb:
        condition: service_healthy

#  frontend:
#    hostname: news_frontend
#    container_name: news_frontend
#    command: sh -c "yarn start"
#    build:
#      context: ./news_frontend
#      dockerfile: ./Dockerfile
#    networks:
#      - frontend
#    ports:
#      - "3000:3000"
#    environment:
#      BACKEND_HTTP_API_ENDPOINT: http://news_backend:3030
#    depends_on:
#      - mongodb

  mongodb:
    container_name: mongo_db
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: news-app
      MONGO_INITDB_ROOT_USERNAME: newsuser
      MONGO_INITDB_ROOT_PASSWORD: 12345678
    networks:
      - backend
    healthcheck:
      test: mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - ./api/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodb_data_container:/data/db
    ports:
      - "27017-27019:27017-27019"

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodb_data_container:
